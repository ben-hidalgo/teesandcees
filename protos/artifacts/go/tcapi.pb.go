// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tcapi.proto

package app

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Document struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Document) Reset()         { *m = Document{} }
func (m *Document) String() string { return proto.CompactTextString(m) }
func (*Document) ProtoMessage()    {}
func (*Document) Descriptor() ([]byte, []int) {
	return fileDescriptor_046f8024ad0275e7, []int{0}
}

func (m *Document) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Document.Unmarshal(m, b)
}
func (m *Document) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Document.Marshal(b, m, deterministic)
}
func (m *Document) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Document.Merge(m, src)
}
func (m *Document) XXX_Size() int {
	return xxx_messageInfo_Document.Size(m)
}
func (m *Document) XXX_DiscardUnknown() {
	xxx_messageInfo_Document.DiscardUnknown(m)
}

var xxx_messageInfo_Document proto.InternalMessageInfo

func (m *Document) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Document) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type DocumentQuery struct {
	Page                 int64    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size                 int64    `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DocumentQuery) Reset()         { *m = DocumentQuery{} }
func (m *DocumentQuery) String() string { return proto.CompactTextString(m) }
func (*DocumentQuery) ProtoMessage()    {}
func (*DocumentQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_046f8024ad0275e7, []int{1}
}

func (m *DocumentQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DocumentQuery.Unmarshal(m, b)
}
func (m *DocumentQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DocumentQuery.Marshal(b, m, deterministic)
}
func (m *DocumentQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DocumentQuery.Merge(m, src)
}
func (m *DocumentQuery) XXX_Size() int {
	return xxx_messageInfo_DocumentQuery.Size(m)
}
func (m *DocumentQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_DocumentQuery.DiscardUnknown(m)
}

var xxx_messageInfo_DocumentQuery proto.InternalMessageInfo

func (m *DocumentQuery) GetPage() int64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *DocumentQuery) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

type DocumentList struct {
	Documents            []*Document `protobuf:"bytes,1,rep,name=documents,proto3" json:"documents,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *DocumentList) Reset()         { *m = DocumentList{} }
func (m *DocumentList) String() string { return proto.CompactTextString(m) }
func (*DocumentList) ProtoMessage()    {}
func (*DocumentList) Descriptor() ([]byte, []int) {
	return fileDescriptor_046f8024ad0275e7, []int{2}
}

func (m *DocumentList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DocumentList.Unmarshal(m, b)
}
func (m *DocumentList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DocumentList.Marshal(b, m, deterministic)
}
func (m *DocumentList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DocumentList.Merge(m, src)
}
func (m *DocumentList) XXX_Size() int {
	return xxx_messageInfo_DocumentList.Size(m)
}
func (m *DocumentList) XXX_DiscardUnknown() {
	xxx_messageInfo_DocumentList.DiscardUnknown(m)
}

var xxx_messageInfo_DocumentList proto.InternalMessageInfo

func (m *DocumentList) GetDocuments() []*Document {
	if m != nil {
		return m.Documents
	}
	return nil
}

type HelloRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloRequest) Reset()         { *m = HelloRequest{} }
func (m *HelloRequest) String() string { return proto.CompactTextString(m) }
func (*HelloRequest) ProtoMessage()    {}
func (*HelloRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_046f8024ad0275e7, []int{3}
}

func (m *HelloRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloRequest.Unmarshal(m, b)
}
func (m *HelloRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloRequest.Marshal(b, m, deterministic)
}
func (m *HelloRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloRequest.Merge(m, src)
}
func (m *HelloRequest) XXX_Size() int {
	return xxx_messageInfo_HelloRequest.Size(m)
}
func (m *HelloRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HelloRequest proto.InternalMessageInfo

func (m *HelloRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type HelloReply struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloReply) Reset()         { *m = HelloReply{} }
func (m *HelloReply) String() string { return proto.CompactTextString(m) }
func (*HelloReply) ProtoMessage()    {}
func (*HelloReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_046f8024ad0275e7, []int{4}
}

func (m *HelloReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloReply.Unmarshal(m, b)
}
func (m *HelloReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloReply.Marshal(b, m, deterministic)
}
func (m *HelloReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloReply.Merge(m, src)
}
func (m *HelloReply) XXX_Size() int {
	return xxx_messageInfo_HelloReply.Size(m)
}
func (m *HelloReply) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloReply.DiscardUnknown(m)
}

var xxx_messageInfo_HelloReply proto.InternalMessageInfo

func (m *HelloReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*Document)(nil), "app.Document")
	proto.RegisterType((*DocumentQuery)(nil), "app.DocumentQuery")
	proto.RegisterType((*DocumentList)(nil), "app.DocumentList")
	proto.RegisterType((*HelloRequest)(nil), "app.HelloRequest")
	proto.RegisterType((*HelloReply)(nil), "app.HelloReply")
}

func init() { proto.RegisterFile("tcapi.proto", fileDescriptor_046f8024ad0275e7) }

var fileDescriptor_046f8024ad0275e7 = []byte{
	// 268 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x51, 0x4d, 0x4f, 0x83, 0x40,
	0x14, 0x64, 0xc1, 0x8f, 0xf2, 0x4a, 0x6b, 0xfa, 0x4e, 0x84, 0x13, 0xd9, 0x83, 0x21, 0x31, 0x21,
	0x4d, 0x3d, 0xf4, 0xe0, 0x51, 0x13, 0x3d, 0x78, 0x71, 0xf5, 0x0f, 0xac, 0xe5, 0xc5, 0x90, 0x40,
	0x59, 0xd9, 0xe5, 0x80, 0xbf, 0xc7, 0x1f, 0x6a, 0x58, 0xd9, 0x16, 0x6e, 0x33, 0xb3, 0x33, 0x79,
	0x93, 0x59, 0x58, 0x9a, 0x83, 0x54, 0x65, 0xae, 0xda, 0xc6, 0x34, 0x18, 0x48, 0xa5, 0x78, 0x0e,
	0x8b, 0xa7, 0xe6, 0xd0, 0xd5, 0x74, 0x34, 0xb8, 0x06, 0xbf, 0x2c, 0x62, 0x96, 0xb2, 0x2c, 0x10,
	0x7e, 0x59, 0x20, 0xc2, 0xc5, 0x51, 0xd6, 0x14, 0xfb, 0x29, 0xcb, 0x42, 0x61, 0x31, 0xdf, 0xc3,
	0xca, 0xf9, 0xdf, 0x3a, 0x6a, 0xfb, 0xc1, 0xa4, 0xe4, 0x17, 0x8d, 0x31, 0x8b, 0x07, 0x4d, 0x97,
	0x3f, 0xff, 0xc1, 0x40, 0x58, 0xcc, 0x1f, 0x20, 0x72, 0xc1, 0xd7, 0x52, 0x1b, 0xbc, 0x83, 0xb0,
	0x18, 0xb9, 0x8e, 0x59, 0x1a, 0x64, 0xcb, 0xdd, 0x2a, 0x97, 0x4a, 0xe5, 0xce, 0x25, 0xce, 0xef,
	0x9c, 0x43, 0xf4, 0x42, 0x55, 0xd5, 0x08, 0xfa, 0xee, 0x48, 0x9b, 0x53, 0x33, 0x36, 0x69, 0x76,
	0x0b, 0x30, 0x7a, 0x54, 0xd5, 0x63, 0x0c, 0xd7, 0x35, 0x69, 0xed, 0x9a, 0x85, 0xc2, 0xd1, 0xdd,
	0x2f, 0x83, 0xcb, 0x8f, 0x61, 0x06, 0xdc, 0xc2, 0xe2, 0x5d, 0xf6, 0x36, 0x84, 0x1b, 0x7b, 0x7b,
	0x7a, 0x24, 0xb9, 0x99, 0x4a, 0xaa, 0xea, 0xb9, 0x87, 0x5b, 0x58, 0x3f, 0xb6, 0x24, 0x0d, 0x9d,
	0x36, 0x9b, 0x77, 0x4e, 0xe6, 0x94, 0x7b, 0xb8, 0x87, 0xe8, 0x99, 0x8c, 0x13, 0x34, 0xe2, 0xcc,
	0x60, 0x27, 0x4c, 0x36, 0x33, 0x6d, 0x58, 0x87, 0x7b, 0x9f, 0x57, 0xf6, 0x93, 0xee, 0xff, 0x02,
	0x00, 0x00, 0xff, 0xff, 0xbd, 0x60, 0x44, 0x5b, 0xb3, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TcapiClient is the client API for Tcapi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TcapiClient interface {
	SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error)
	CreateDocument(ctx context.Context, in *Document, opts ...grpc.CallOption) (*Document, error)
	GetDocuments(ctx context.Context, in *DocumentQuery, opts ...grpc.CallOption) (*DocumentList, error)
}

type tcapiClient struct {
	cc *grpc.ClientConn
}

func NewTcapiClient(cc *grpc.ClientConn) TcapiClient {
	return &tcapiClient{cc}
}

func (c *tcapiClient) SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error) {
	out := new(HelloReply)
	err := c.cc.Invoke(ctx, "/app.Tcapi/SayHello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tcapiClient) CreateDocument(ctx context.Context, in *Document, opts ...grpc.CallOption) (*Document, error) {
	out := new(Document)
	err := c.cc.Invoke(ctx, "/app.Tcapi/CreateDocument", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tcapiClient) GetDocuments(ctx context.Context, in *DocumentQuery, opts ...grpc.CallOption) (*DocumentList, error) {
	out := new(DocumentList)
	err := c.cc.Invoke(ctx, "/app.Tcapi/GetDocuments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TcapiServer is the server API for Tcapi service.
type TcapiServer interface {
	SayHello(context.Context, *HelloRequest) (*HelloReply, error)
	CreateDocument(context.Context, *Document) (*Document, error)
	GetDocuments(context.Context, *DocumentQuery) (*DocumentList, error)
}

// UnimplementedTcapiServer can be embedded to have forward compatible implementations.
type UnimplementedTcapiServer struct {
}

func (*UnimplementedTcapiServer) SayHello(ctx context.Context, req *HelloRequest) (*HelloReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SayHello not implemented")
}
func (*UnimplementedTcapiServer) CreateDocument(ctx context.Context, req *Document) (*Document, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDocument not implemented")
}
func (*UnimplementedTcapiServer) GetDocuments(ctx context.Context, req *DocumentQuery) (*DocumentList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDocuments not implemented")
}

func RegisterTcapiServer(s *grpc.Server, srv TcapiServer) {
	s.RegisterService(&_Tcapi_serviceDesc, srv)
}

func _Tcapi_SayHello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TcapiServer).SayHello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.Tcapi/SayHello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TcapiServer).SayHello(ctx, req.(*HelloRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Tcapi_CreateDocument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Document)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TcapiServer).CreateDocument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.Tcapi/CreateDocument",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TcapiServer).CreateDocument(ctx, req.(*Document))
	}
	return interceptor(ctx, in, info, handler)
}

func _Tcapi_GetDocuments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DocumentQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TcapiServer).GetDocuments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.Tcapi/GetDocuments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TcapiServer).GetDocuments(ctx, req.(*DocumentQuery))
	}
	return interceptor(ctx, in, info, handler)
}

var _Tcapi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "app.Tcapi",
	HandlerType: (*TcapiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SayHello",
			Handler:    _Tcapi_SayHello_Handler,
		},
		{
			MethodName: "CreateDocument",
			Handler:    _Tcapi_CreateDocument_Handler,
		},
		{
			MethodName: "GetDocuments",
			Handler:    _Tcapi_GetDocuments_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "tcapi.proto",
}
